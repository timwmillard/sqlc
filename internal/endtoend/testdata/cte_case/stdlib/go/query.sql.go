// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: query.sql

package querytest

import (
	"context"
)

const cTECase = `-- name: CTECase :many
WITH extra_data AS (
	SELECT
		ready,
		CASE WHEN ready THEN
			'Ready'
		ELSE 'Not Ready'
		END AS label
	FROM bar
)
SELECT extra_data.ready
FROM extra_data
WHERE label = $1
`

func (q *Queries) CTECase(ctx context.Context, label string) ([]bool, error) {
	rows, err := q.db.QueryContext(ctx, cTECase, label)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []bool
	for rows.Next() {
		var ready bool
		if err := rows.Scan(&ready); err != nil {
			return nil, err
		}
		items = append(items, ready)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
