// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: query.sql

package querytest

import (
	"context"
)

const cTEWithUpdate = `-- name: CTEWithUpdate :many

WITH extra_data AS (
    UPDATE bar
    SET ready = true
    WHERE name = $1
    RETURNING ready, name
)
SELECT ready, name 
FROM extra_data
WHERE name = $2
`

type CTEWithUpdateParams struct {
	Name   string
	Name_2 string
}

type CTEWithUpdateRow struct {
	Ready bool
	Name  string
}

// -- name: CTEWithAlias :many
// WITH extra_data AS (
// 	SELECT
// 		ready,
// 		name  AS label
// 	FROM bar
// )
// SELECT *
// FROM extra_data
// WHERE label = $1;
func (q *Queries) CTEWithUpdate(ctx context.Context, arg CTEWithUpdateParams) ([]CTEWithUpdateRow, error) {
	rows, err := q.db.QueryContext(ctx, cTEWithUpdate, arg.Name, arg.Name_2)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []CTEWithUpdateRow
	for rows.Next() {
		var i CTEWithUpdateRow
		if err := rows.Scan(&i.Ready, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
